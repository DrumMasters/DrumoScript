<< This code was generated by DrumByteâ„¢. >>
<< Please use resposnibly, as there could be ANY type of small/big mistake. >>

print "Hello, World!-nl-"
print 1

str Hello Hiya, World!
int Hullo 5

print -Hello-
print -Hullo-

set Hello Hullo!
set Hullo 7

print -Hello-
print -Hullo-

<< This is a comment! >>
<< Inline >> print << Comments! >> "Testing inline comments"

str InpTest stdin Testing input, please enter a word
print -InpTest-

int IntInpTest stdin Testing int input, please enter a number
print -IntInpTest-

set InpTest stdin Testing once again, please enter a word
print -InpTest-

set IntInpTest stdin Testing int input again, please enter a number
print -IntInpTest-

str HelloProcess print "Hello, World"
process -HelloProcess-

create test.txt
write test.txt Hello! Just testing!
reset test.txt
write test.txt Testing again

mkdir TestDirectory
create TestDirectory/test.py
write TestDirectory/test.py print("Hello, World!")
delete TestDirectory/test.py
rmdir TestDirectory

delete test.txt

str Hi Hello!

if Hi = Hey
print "'Hi' is set to 'Hey'."
elif Hi = Hello!
print "'Hi' is set to 'Hello!'."
else
print "'Hi' is not set to any of the above."
end

int One 1

if One > 2
print "'One' is greater than 2."
elif One < 1
print "'One' is less than 1."
else
print "'One' is less than 2."
end

proc Hello
print "Hello, just testing!"
print "Hehe boi"
endp
  
print "Hey, I just got past the Procedure!"
 
exec Hello

int Two 5
++ Two 5
print -Two-
-- Two 5
print -Two-
++ Two
print -Two-
-- Two
print -Two-

str ConcatRemoveTest Hello,
ConcatRemoveTest += World!
print -ConcatRemoveTest-
ConcatRemoveTest -= World!
print -ConcatRemoveTest-
print "-nl-Inclusion test:-nl-"
include includeExample

exec HelloWorld
print "-nl-"
exec HelloWorld2

define Macro Hello, I'm a macro!

print ~Macro~

if Macro = Hello, I'm a macro!
print "A macro is a macro."
end

int RandTest rand 5 9
print -RandTest-
print "-nl-"

int i 0

repeat 5
++ i
print "Repeat testing!"
print -i-
endr

print "-nl-"
print "Text-getting test (HTTP): -nl-"
str HttpGetTest httpget text https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Header-getting test (HTTP): -nl-"
set HttpGetTest httpget headers https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Status code-getting test (HTTP): -nl-"
set HttpGetTest httpget statusCode https://w3schools.com/python/demopage.htm
print -HttpGetTest-

list HelloList 1 - 2 - 3 - 4
print |0| HelloList
int HelloListTest |0| HelloList
print -HelloListTest-
set HelloListTest |1| HelloList
print -HelloListTest-

list StrList Hello - World!
str StrListTest |0| StrList
print -StrListTest-
set StrListTest |1| StrList
print -StrListTest-
append StrList This is a test!
set StrListTest |2| StrList
print -StrListTest-

dict Dictionary Key1 Hello, - Key2 World!
print %Key1% Dictionary
str StrKey %Key1% Dictionary
print -StrKey-
set StrKey %Key2% Dictionary
print -StrKey-
dict IntDict Int1 1 - Int2 5 - Int3 3 - Int4 2 - Int5 7
int IntDictTest %Int1% IntDict
print -IntDictTest-
set IntDictTest %Int2% IntDict
print -IntDictTest-
set IntDictTest %Int3% IntDict
print -IntDictTest-
set IntDictTest %Int4% IntDict
print -IntDictTest-
set IntDictTest %Int5% IntDict
print -IntDictTest-

<< print "-nl-HTTP post request incoming:"

<< dict data postrequestInput FFFFFF >>
<< httppost https://5fc6f4cb-fef9-4406-a492-1fe7768fe180-00-vckpha4n25fo.picard.replit.dev/ data >>

<< print "Successfully sent a post request to site." >>

int RepeatTime 10
int j 0

print "-nl-----------------------nl-"

repeat RepeatTime
++ j
print -j-
endr

<< cls >

<< this part got integrated by DrumAI >>

proc template
<< your code here >>
endp

wait 2
print "Waited 2 seconds"
int wait_time 2
wait wait_time
print "Waited another 2 seconds"
print "-nl- "

print "Testing NOT operator:"
int not 2
if not ! 5
print "(not) is unequal to 5."
else
print "(not) is equal to 5."
end
print "Hello, World!-nl-"
print 1

str Hello Hiya, World!
int Hullo 5

print -Hello-
print -Hullo-

set Hello Hullo!
set Hullo 7

print -Hello-
print -Hullo-

<< This is a comment! >>
<< Inline >> print << Comments! >> "Testing inline comments"

str InpTest stdin Testing input, please enter a word
print -InpTest-

int IntInpTest stdin Testing int input, please enter a number
print -IntInpTest-

set InpTest stdin Testing once again, please enter a word
print -InpTest-

set IntInpTest stdin Testing int input again, please enter a number
print -IntInpTest-

str HelloProcess print "Hello, World"
process -HelloProcess-

create test.txt
write test.txt Hello! Just testing!
reset test.txt
write test.txt Testing again

mkdir TestDirectory
create TestDirectory/test.py
write TestDirectory/test.py print("Hello, World!")
delete TestDirectory/test.py
rmdir TestDirectory

delete test.txt

str Hi Hello!

if Hi = Hey
print "'Hi' is set to 'Hey'."
elif Hi = Hello!
print "'Hi' is set to 'Hello!'."
else
print "'Hi' is not set to any of the above."
end

int One 1

if One > 2
print "'One' is greater than 2."
elif One < 1
print "'One' is less than 1."
else
print "'One' is less than 2."
end

proc Hello
print "Hello, just testing!"
print "Hehe boi"
endp
  
print "Hey, I just got past the Procedure!"
 
exec Hello

int Two 5
++ Two 5
print -Two-
-- Two 5
print -Two-
++ Two
print -Two-
-- Two
print -Two-

str ConcatRemoveTest Hello,
ConcatRemoveTest += World!
print -ConcatRemoveTest-
ConcatRemoveTest -= World!
print -ConcatRemoveTest-
print "-nl-Inclusion test:-nl-"
include includeExample

exec HelloWorld
print "-nl-"
exec HelloWorld2

define Macro Hello, I'm a macro!

print ~Macro~

if Macro = Hello, I'm a macro!
print "A macro is a macro."
end

int RandTest rand 5 9
print -RandTest-
print "-nl-"

int i 0

repeat 5
++ i
print "Repeat testing!"
print -i-
endr

print "-nl-"
print "Text-getting test (HTTP): -nl-"
str HttpGetTest httpget text https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Header-getting test (HTTP): -nl-"
set HttpGetTest httpget headers https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Status code-getting test (HTTP): -nl-"
set HttpGetTest httpget statusCode https://w3schools.com/python/demopage.htm
print -HttpGetTest-

list HelloList 1 - 2 - 3 - 4
print |0| HelloList
int HelloListTest |0| HelloList
print -HelloListTest-
set HelloListTest |1| HelloList
print -HelloListTest-

list StrList Hello - World!
str StrListTest |0| StrList
print -StrListTest-
set StrListTest |1| StrList
print -StrListTest-
append StrList This is a test!
set StrListTest |2| StrList
print -StrListTest-

dict Dictionary Key1 Hello, - Key2 World!
print %Key1% Dictionary
str StrKey %Key1% Dictionary
print -StrKey-
set StrKey %Key2% Dictionary
print -StrKey-
dict IntDict Int1 1 - Int2 5 - Int3 3 - Int4 2 - Int5 7
int IntDictTest %Int1% IntDict
print -IntDictTest-
set IntDictTest %Int2% IntDict
print -IntDictTest-
set IntDictTest %Int3% IntDict
print -IntDictTest-
set IntDictTest %Int4% IntDict
print -IntDictTest-
set IntDictTest %Int5% IntDict
print -IntDictTest-

<< print "-nl-HTTP post request incoming:"

<< dict data postrequestInput FFFFFF >>
<< httppost https://5fc6f4cb-fef9-4406-a492-1fe7768fe180-00-vckpha4n25fo.picard.replit.dev/ data >>

<< print "Successfully sent a post request to site." >>

int RepeatTime 10
int j 0

print "-nl-----------------------nl-"

repeat RepeatTime
++ j
print -j-
endr

<< cls >

<< this part got integrated by DrumAI >>

proc template
<< your code here >>
endp

wait 2
print "Waited 2 seconds"
int wait_time 2
wait wait_time
print "Waited another 2 seconds"
print "-nl- "

print "Testing NOT operator:"
int not 2
if not ! 5
print "(not) is unequal to 5."
else
print "(not) is equal to 5."
end
print "Hello, World!-nl-"
print 1

str Hello Hiya, World!
int Hullo 5

print -Hello-
print -Hullo-

set Hello Hullo!
set Hullo 7

print -Hello-
print -Hullo-

<< This is a comment! >>
<< Inline >> print << Comments! >> "Testing inline comments"

str InpTest stdin Testing input, please enter a word
print -InpTest-

int IntInpTest stdin Testing int input, please enter a number
print -IntInpTest-

set InpTest stdin Testing once again, please enter a word
print -InpTest-

set IntInpTest stdin Testing int input again, please enter a number
print -IntInpTest-

str HelloProcess print "Hello, World"
process -HelloProcess-

create test.txt
write test.txt Hello! Just testing!
reset test.txt
write test.txt Testing again

mkdir TestDirectory
create TestDirectory/test.py
write TestDirectory/test.py print("Hello, World!")
delete TestDirectory/test.py
rmdir TestDirectory

delete test.txt

str Hi Hello!

if Hi = Hey
print "'Hi' is set to 'Hey'."
elif Hi = Hello!
print "'Hi' is set to 'Hello!'."
else
print "'Hi' is not set to any of the above."
end

int One 1

if One > 2
print "'One' is greater than 2."
elif One < 1
print "'One' is less than 1."
else
print "'One' is less than 2."
end

proc Hello
print "Hello, just testing!"
print "Hehe boi"
endp
  
print "Hey, I just got past the Procedure!"
 
exec Hello

int Two 5
++ Two 5
print -Two-
-- Two 5
print -Two-
++ Two
print -Two-
-- Two
print -Two-

str ConcatRemoveTest Hello,
ConcatRemoveTest += World!
print -ConcatRemoveTest-
ConcatRemoveTest -= World!
print -ConcatRemoveTest-
print "-nl-Inclusion test:-nl-"
include includeExample

exec HelloWorld
print "-nl-"
exec HelloWorld2

define Macro Hello, I'm a macro!

print ~Macro~

if Macro = Hello, I'm a macro!
print "A macro is a macro."
end

int RandTest rand 5 9
print -RandTest-
print "-nl-"

int i 0

repeat 5
++ i
print "Repeat testing!"
print -i-
endr

print "-nl-"
print "Text-getting test (HTTP): -nl-"
str HttpGetTest httpget text https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Header-getting test (HTTP): -nl-"
set HttpGetTest httpget headers https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Status code-getting test (HTTP): -nl-"
set HttpGetTest httpget statusCode https://w3schools.com/python/demopage.htm
print -HttpGetTest-

list HelloList 1 - 2 - 3 - 4
print |0| HelloList
int HelloListTest |0| HelloList
print -HelloListTest-
set HelloListTest |1| HelloList
print -HelloListTest-

list StrList Hello - World!
str StrListTest |0| StrList
print -StrListTest-
set StrListTest |1| StrList
print -StrListTest-
append StrList This is a test!
set StrListTest |2| StrList
print -StrListTest-

dict Dictionary Key1 Hello, - Key2 World!
print %Key1% Dictionary
str StrKey %Key1% Dictionary
print -StrKey-
set StrKey %Key2% Dictionary
print -StrKey-
dict IntDict Int1 1 - Int2 5 - Int3 3 - Int4 2 - Int5 7
int IntDictTest %Int1% IntDict
print -IntDictTest-
set IntDictTest %Int2% IntDict
print -IntDictTest-
set IntDictTest %Int3% IntDict
print -IntDictTest-
set IntDictTest %Int4% IntDict
print -IntDictTest-
set IntDictTest %Int5% IntDict
print -IntDictTest-

<< print "-nl-HTTP post request incoming:"

<< dict data postrequestInput FFFFFF >>
<< httppost https://5fc6f4cb-fef9-4406-a492-1fe7768fe180-00-vckpha4n25fo.picard.replit.dev/ data >>

<< print "Successfully sent a post request to site." >>

int RepeatTime 10
int j 0

print "-nl-----------------------nl-"

repeat RepeatTime
++ j
print -j-
endr

<< cls >

<< this part got integrated by DrumAI >>

proc template
<< your code here >>
endp

wait 2
print "Waited 2 seconds"
int wait_time 2
wait wait_time
print "Waited another 2 seconds"
print "-nl- "

print "Testing NOT operator:"
int not 2
if not ! 5
print "(not) is unequal to 5."
else
print "(not) is equal to 5."
end
print "Hello, World!-nl-"
print 1

str Hello Hiya, World!
int Hullo 5

print -Hello-
print -Hullo-

set Hello Hullo!
set Hullo 7

print -Hello-
print -Hullo-

<< This is a comment! >>
<< Inline >> print << Comments! >> "Testing inline comments"

str InpTest stdin Testing input, please enter a word
print -InpTest-

int IntInpTest stdin Testing int input, please enter a number
print -IntInpTest-

set InpTest stdin Testing once again, please enter a word
print -InpTest-

set IntInpTest stdin Testing int input again, please enter a number
print -IntInpTest-

str HelloProcess print "Hello, World"
process -HelloProcess-

create test.txt
write test.txt Hello! Just testing!
reset test.txt
write test.txt Testing again

mkdir TestDirectory
create TestDirectory/test.py
write TestDirectory/test.py print("Hello, World!")
delete TestDirectory/test.py
rmdir TestDirectory

delete test.txt

str Hi Hello!

if Hi = Hey
print "'Hi' is set to 'Hey'."
elif Hi = Hello!
print "'Hi' is set to 'Hello!'."
else
print "'Hi' is not set to any of the above."
end

int One 1

if One > 2
print "'One' is greater than 2."
elif One < 1
print "'One' is less than 1."
else
print "'One' is less than 2."
end

proc Hello
print "Hello, just testing!"
print "Hehe boi"
endp
  
print "Hey, I just got past the Procedure!"
 
exec Hello

int Two 5
++ Two 5
print -Two-
-- Two 5
print -Two-
++ Two
print -Two-
-- Two
print -Two-

str ConcatRemoveTest Hello,
ConcatRemoveTest += World!
print -ConcatRemoveTest-
ConcatRemoveTest -= World!
print -ConcatRemoveTest-
print "-nl-Inclusion test:-nl-"
include includeExample

exec HelloWorld
print "-nl-"
exec HelloWorld2

define Macro Hello, I'm a macro!

print ~Macro~

if Macro = Hello, I'm a macro!
print "A macro is a macro."
end

int RandTest rand 5 9
print -RandTest-
print "-nl-"

int i 0

repeat 5
++ i
print "Repeat testing!"
print -i-
endr

print "-nl-"
print "Text-getting test (HTTP): -nl-"
str HttpGetTest httpget text https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Header-getting test (HTTP): -nl-"
set HttpGetTest httpget headers https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Status code-getting test (HTTP): -nl-"
set HttpGetTest httpget statusCode https://w3schools.com/python/demopage.htm
print -HttpGetTest-

list HelloList 1 - 2 - 3 - 4
print |0| HelloList
int HelloListTest |0| HelloList
print -HelloListTest-
set HelloListTest |1| HelloList
print -HelloListTest-

list StrList Hello - World!
str StrListTest |0| StrList
print -StrListTest-
set StrListTest |1| StrList
print -StrListTest-
append StrList This is a test!
set StrListTest |2| StrList
print -StrListTest-

dict Dictionary Key1 Hello, - Key2 World!
print %Key1% Dictionary
str StrKey %Key1% Dictionary
print -StrKey-
set StrKey %Key2% Dictionary
print -StrKey-
dict IntDict Int1 1 - Int2 5 - Int3 3 - Int4 2 - Int5 7
int IntDictTest %Int1% IntDict
print -IntDictTest-
set IntDictTest %Int2% IntDict
print -IntDictTest-
set IntDictTest %Int3% IntDict
print -IntDictTest-
set IntDictTest %Int4% IntDict
print -IntDictTest-
set IntDictTest %Int5% IntDict
print -IntDictTest-

<< print "-nl-HTTP post request incoming:"

<< dict data postrequestInput FFFFFF >>
<< httppost https://5fc6f4cb-fef9-4406-a492-1fe7768fe180-00-vckpha4n25fo.picard.replit.dev/ data >>

<< print "Successfully sent a post request to site." >>

int RepeatTime 10
int j 0

print "-nl-----------------------nl-"

repeat RepeatTime
++ j
print -j-
endr

<< cls >

<< this part got integrated by DrumAI >>

proc template
<< your code here >>
endp

wait 2
print "Waited 2 seconds"
int wait_time 2
wait wait_time
print "Waited another 2 seconds"
print "-nl- "

print "Testing NOT operator:"
int not 2
if not ! 5
print "(not) is unequal to 5."
else
print "(not) is equal to 5."
end
print "Hello, World!-nl-"
print 1

str Hello Hiya, World!
int Hullo 5

print -Hello-
print -Hullo-

set Hello Hullo!
set Hullo 7

print -Hello-
print -Hullo-

<< This is a comment! >>
<< Inline >> print << Comments! >> "Testing inline comments"

str InpTest stdin Testing input, please enter a word
print -InpTest-

int IntInpTest stdin Testing int input, please enter a number
print -IntInpTest-

set InpTest stdin Testing once again, please enter a word
print -InpTest-

set IntInpTest stdin Testing int input again, please enter a number
print -IntInpTest-

str HelloProcess print "Hello, World"
process -HelloProcess-

create test.txt
write test.txt Hello! Just testing!
reset test.txt
write test.txt Testing again

mkdir TestDirectory
create TestDirectory/test.py
write TestDirectory/test.py print("Hello, World!")
delete TestDirectory/test.py
rmdir TestDirectory

delete test.txt

str Hi Hello!

if Hi = Hey
print "'Hi' is set to 'Hey'."
elif Hi = Hello!
print "'Hi' is set to 'Hello!'."
else
print "'Hi' is not set to any of the above."
end

int One 1

if One > 2
print "'One' is greater than 2."
elif One < 1
print "'One' is less than 1."
else
print "'One' is less than 2."
end

proc Hello
print "Hello, just testing!"
print "Hehe boi"
endp
  
print "Hey, I just got past the Procedure!"
 
exec Hello

int Two 5
++ Two 5
print -Two-
-- Two 5
print -Two-
++ Two
print -Two-
-- Two
print -Two-

str ConcatRemoveTest Hello,
ConcatRemoveTest += World!
print -ConcatRemoveTest-
ConcatRemoveTest -= World!
print -ConcatRemoveTest-
print "-nl-Inclusion test:-nl-"
include includeExample

exec HelloWorld
print "-nl-"
exec HelloWorld2

define Macro Hello, I'm a macro!

print ~Macro~

if Macro = Hello, I'm a macro!
print "A macro is a macro."
end

int RandTest rand 5 9
print -RandTest-
print "-nl-"

int i 0

repeat 5
++ i
print "Repeat testing!"
print -i-
endr

print "-nl-"
print "Text-getting test (HTTP): -nl-"
str HttpGetTest httpget text https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Header-getting test (HTTP): -nl-"
set HttpGetTest httpget headers https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Status code-getting test (HTTP): -nl-"
set HttpGetTest httpget statusCode https://w3schools.com/python/demopage.htm
print -HttpGetTest-

list HelloList 1 - 2 - 3 - 4
print |0| HelloList
int HelloListTest |0| HelloList
print -HelloListTest-
set HelloListTest |1| HelloList
print -HelloListTest-

list StrList Hello - World!
str StrListTest |0| StrList
print -StrListTest-
set StrListTest |1| StrList
print -StrListTest-
append StrList This is a test!
set StrListTest |2| StrList
print -StrListTest-

dict Dictionary Key1 Hello, - Key2 World!
print %Key1% Dictionary
str StrKey %Key1% Dictionary
print -StrKey-
set StrKey %Key2% Dictionary
print -StrKey-
dict IntDict Int1 1 - Int2 5 - Int3 3 - Int4 2 - Int5 7
int IntDictTest %Int1% IntDict
print -IntDictTest-
set IntDictTest %Int2% IntDict
print -IntDictTest-
set IntDictTest %Int3% IntDict
print -IntDictTest-
set IntDictTest %Int4% IntDict
print -IntDictTest-
set IntDictTest %Int5% IntDict
print -IntDictTest-

<< print "-nl-HTTP post request incoming:"

<< dict data postrequestInput FFFFFF >>
<< httppost https://5fc6f4cb-fef9-4406-a492-1fe7768fe180-00-vckpha4n25fo.picard.replit.dev/ data >>

<< print "Successfully sent a post request to site." >>

int RepeatTime 10
int j 0

print "-nl-----------------------nl-"

repeat RepeatTime
++ j
print -j-
endr

<< cls >

<< this part got integrated by DrumAI >>

proc template
<< your code here >>
endp

wait 2
print "Waited 2 seconds"
int wait_time 2
wait wait_time
print "Waited another 2 seconds"
print "-nl- "

print "Testing NOT operator:"
int not 2
if not ! 5
print "(not) is unequal to 5."
else
print "(not) is equal to 5."
end
print "Hello, World!-nl-"
print 1

str Hello Hiya, World!
int Hullo 5

print -Hello-
print -Hullo-

set Hello Hullo!
set Hullo 7

print -Hello-
print -Hullo-

<< This is a comment! >>
<< Inline >> print << Comments! >> "Testing inline comments"

str InpTest stdin Testing input, please enter a word
print -InpTest-

int IntInpTest stdin Testing int input, please enter a number
print -IntInpTest-

set InpTest stdin Testing once again, please enter a word
print -InpTest-

set IntInpTest stdin Testing int input again, please enter a number
print -IntInpTest-

str HelloProcess print "Hello, World"
process -HelloProcess-

create test.txt
write test.txt Hello! Just testing!
reset test.txt
write test.txt Testing again

mkdir TestDirectory
create TestDirectory/test.py
write TestDirectory/test.py print("Hello, World!")
delete TestDirectory/test.py
rmdir TestDirectory

delete test.txt

str Hi Hello!

if Hi = Hey
print "'Hi' is set to 'Hey'."
elif Hi = Hello!
print "'Hi' is set to 'Hello!'."
else
print "'Hi' is not set to any of the above."
end

int One 1

if One > 2
print "'One' is greater than 2."
elif One < 1
print "'One' is less than 1."
else
print "'One' is less than 2."
end

proc Hello
print "Hello, just testing!"
print "Hehe boi"
endp
  
print "Hey, I just got past the Procedure!"
 
exec Hello

int Two 5
++ Two 5
print -Two-
-- Two 5
print -Two-
++ Two
print -Two-
-- Two
print -Two-

str ConcatRemoveTest Hello,
ConcatRemoveTest += World!
print -ConcatRemoveTest-
ConcatRemoveTest -= World!
print -ConcatRemoveTest-
print "-nl-Inclusion test:-nl-"
include includeExample

exec HelloWorld
print "-nl-"
exec HelloWorld2

define Macro Hello, I'm a macro!

print ~Macro~

if Macro = Hello, I'm a macro!
print "A macro is a macro."
end

int RandTest rand 5 9
print -RandTest-
print "-nl-"

int i 0

repeat 5
++ i
print "Repeat testing!"
print -i-
endr

print "-nl-"
print "Text-getting test (HTTP): -nl-"
str HttpGetTest httpget text https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Header-getting test (HTTP): -nl-"
set HttpGetTest httpget headers https://w3schools.com/python/demopage.htm
print -HttpGetTest-
print "-nl-"
print "Status code-getting test (HTTP): -nl-"
set HttpGetTest httpget statusCode https://w3schools.com/python/demopage.htm
print -HttpGetTest-

list HelloList 1 - 2 - 3 - 4
print |0| HelloList
int HelloListTest |0| HelloList
print -HelloListTest-
set HelloListTest |1| HelloList
print -HelloListTest-

list StrList Hello - World!
str StrListTest |0| StrList
print -StrListTest-
set StrListTest |1| StrList
print -StrListTest-
append StrList This is a test!
set StrListTest |2| StrList
print -StrListTest-

dict Dictionary Key1 Hello, - Key2 World!
print %Key1% Dictionary
str StrKey %Key1% Dictionary
print -StrKey-
set StrKey %Key2% Dictionary
print -StrKey-
dict IntDict Int1 1 - Int2 5 - Int3 3 - Int4 2 - Int5 7
int IntDictTest %Int1% IntDict
print -IntDictTest-
set IntDictTest %Int2% IntDict
print -IntDictTest-
set IntDictTest %Int3% IntDict
print -IntDictTest-
set IntDictTest %Int4% IntDict
print -IntDictTest-
set IntDictTest %Int5% IntDict
print -IntDictTest-

<< print "-nl-HTTP post request incoming:"

<< dict data postrequestInput FFFFFF >>
<< httppost https://5fc6f4cb-fef9-4406-a492-1fe7768fe180-00-vckpha4n25fo.picard.replit.dev/ data >>

<< print "Successfully sent a post request to site." >>

int RepeatTime 10
int j 0

print "-nl-----------------------nl-"

repeat RepeatTime
++ j
print -j-
endr

<< cls >

<< this part got integrated by DrumAI >>

proc template
<< your code here >>
endp

wait 2
print "Waited 2 seconds"
int wait_time 2
wait wait_time
print "Waited another 2 seconds"
print "-nl- "

print "Testing NOT operator:"
int not 2
if not ! 5
print "(not) is unequal to 5."
else
print "(not) is equal to 5."
end
