import json

"""
█▀▀▄  █▀▀█  █  █  █▀▄▀█  █▀▀█  █   █ ▀▀█▀▀ █▀▀▀ 
█  █  █▄▄▀  █  █  █ █ █  █▀▀▄  █▄▄▄█   █   █▀▀▀ 
█▄▄▀  █  █  ▀▄▄▀  █   █  █▄▄█    █     █   █▄▄▄

DrumByte is a JIT DrumoScript-to-Bytecode compiler (the bytecode format is a bit different than you'd usually expect)
"""

with open('config.json', 'r') as f:
  config = json.loads(f.read())

entrypoint = config.get("entrypoint")

with open(entrypoint, 'r') as f:
  code = f.readlines()
  f.close()

hexified_items = []
decoded_items = []

def compile(code):
  for item in code:
    item = item.replace("\n", "")
    item = item.encode()
    item = item.hex().replace("0a", "_")
    hexified_items.append(item)

def decompile(hexified_items):
  for item in hexified_items:
    item = bytes.fromhex(item.replace("_", "0a"))
    item = item.decode()
    decoded_items.append(item)

print("DrumByte™ v1.0")
print("© DrumMasters, 2024")
print("""Please enter an option:
  -c = compile code
  -d = decompile code
""")
while True:
  answer = input()
  if answer == "-c":
    compile(code)
    with open(entrypoint.replace(".dms", ".dbc"), 'w') as f:
      f.write("")
    with open(entrypoint.replace(".dms", ".dbc"), 'a') as f:
      for item in hexified_items:
        f.write(f"{item}\n")
      f.close()
    print(f"Your code has been compiled to {entrypoint.replace('.dms', '.dbc')}.")
  elif answer == '-d':
    decompile(hexified_items)
    with open(f"decompiled_{entrypoint}", 'w') as f:
      f.write("")
    with open(f"decompiled_{entrypoint}", 'a') as f:
      f.write("<< This code was generated by DrumByte™. >>\n")
      f.write("<< Please use resposnibly, as there could be ANY type of small/big mistake. >>\n\n")
      for item in decoded_items:
        f.write(f"{item}\n")
      f.close()
    print(f"Your code has been decompiled to decompiled_{entrypoint}.")